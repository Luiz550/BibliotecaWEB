// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Configuration;
using System.Reflection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Extensions.Configuration;

namespace teste.DATA.Models;

public partial class Controle_EmprestimoContext : DbContext
{
    public Controle_EmprestimoContext()
    {
    }

    public Controle_EmprestimoContext(DbContextOptions<Controle_EmprestimoContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Cliente> Cliente { get; set; }

    public virtual DbSet<Livro> Livro { get; set; }

    public virtual DbSet<LivroCliente> LivroCliente { get; set; }

    public virtual DbSet<VwEmprestimo> VwEmprestimo { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=luiz\\SQLEXPRESS;Initial Catalog=Controle_Emprestimo;Integrated Security=True;trusted_connection=true;encrypt=false;");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
		
		modelBuilder.Entity<Cliente>(entity =>
        {
            entity.Property(e => e.Endereço).IsFixedLength();
            entity.Property(e => e.Nome).IsFixedLength();
            entity.Property(e => e.Telefone).IsFixedLength();
        });

        modelBuilder.Entity<Livro>(entity =>
        {
            entity.Property(e => e.Autor).IsFixedLength();
            entity.Property(e => e.Editora).IsFixedLength();
            entity.Property(e => e.Titulo).IsFixedLength();
        });

        modelBuilder.Entity<LivroCliente>(entity =>
        {
            entity.HasOne(d => d.IdClienteNavigation).WithMany(p => p.LivroCliente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Livro_Cliente_Cliente");

            entity.HasOne(d => d.IdLivroNavigation).WithMany(p => p.LivroCliente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Livro_Cliente_Livro");
        });


        modelBuilder.Entity<VwEmprestimo>(entity =>
        {
            entity.HasNoKey();
            
            entity.ToView("VwEmprestimo");

            entity.Property(e => e.Nome).IsFixedLength();
            entity.Property(e => e.Titulo).IsFixedLength();
        });

         OnModelCreatingPartial(modelBuilder);

    }


    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}